{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Hero","theme","useTheme","css","colors","white","headerBg","text","rhythm","Description","Index","data","site","allMdx","edges","map","post","node","key","id","marginBottom","transition","color","primary","to","frontmatter","slug","aria-label","title","excerpt","pageQuery"],"mappings":"gZAUMA,EAAO,WACX,IAAMC,EAAQC,cACd,OACE,uBACEC,IAAKA,YAAF,SACQF,EAAMG,OAAOC,MADrB,0BAGaJ,EAAMG,OAAOE,SAH1B,yCAQH,YAAC,IAAD,CACEH,IAAG,GAKH,kBACEA,IAAKA,YAAF,SACQF,EAAMG,OAAOG,KADrB,mEAMYC,YAAO,IANnB,MADL,yDAaF,mBACEL,IAAG,MASLM,EAAW,0G,8FAKF,SAASC,EAAT,GAA4C,IAAD,IAA1BC,KAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACtCZ,EAAQC,cACd,OACE,YAAC,IAAD,CAAQU,KAAMA,GACZ,YAACZ,EAAD,MACA,YAAC,IAAD,CACEG,IAAG,GAIFU,EAAOC,MAAMC,KAAI,gBAASC,EAAT,EAAGC,KAAH,OAChB,mBACEC,IAAKF,EAAKG,GACVhB,IAAG,GAIH,kBACEA,IAAKA,YAAI,CACPiB,aAAcZ,YAAO,IACrBa,WAAY,iBACZ,SAAU,CACRC,MAAOrB,EAAMG,OAAOmB,YAIxB,YAAC,IAAD,CACEC,GAAIR,EAAKS,YAAYC,KACrBC,aAAA,QAAoBX,EAAKS,YAAYG,OAEpCZ,EAAKS,YAAYG,QAGtB,YAACnB,EAAD,KACGO,EAAKa,QAAS,IACf,YAAC,IAAD,CACEL,GAAIR,EAAKS,YAAYC,KACrBC,aAAA,QAAoBX,EAAKS,YAAYG,OAFvC,uBASN,YAAC,IAAD,CAAMJ,GAAG,QAAQG,aAAW,mBAA5B,qBAGA,yBAMD,IAAMG,EAAS","file":"component---src-pages-index-js-0dad998a4ccbf473e37c.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport Layout from 'components/Layout'\nimport Link from 'components/Link'\nimport { useTheme } from 'components/Theming'\nimport Container from 'components/Container'\nimport { rhythm } from '../lib/typography'\n\nconst Hero = () => {\n  const theme = useTheme()\n  return (\n    <section\n      css={css`\n        color: ${theme.colors.white};\n        width: 100%;\n        background: ${theme.colors.headerBg};\n        padding: 20px 0 30px 0;\n        display: flex;\n      `}\n    >\n      <Container\n        css={css`\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        <h1\n          css={css`\n            color: ${theme.colors.text};\n            position: relative;\n            z-index: 5;\n            line-height: 1.5;\n            margin: 0;\n            max-width: ${rhythm(25)};\n          `}\n        >\n          A blog about Indie hacking and tech entrepreneurship\n        </h1>\n      </Container>\n      <div\n        css={css`\n          height: 150px;\n          overflow: hidden;\n        `}\n      />\n    </section>\n  )\n}\n\nconst Description = styled.p`\n  margin-bottom: 10px;\n  display: inline-block;\n`\n\nexport default function Index({ data: { site, allMdx } }) {\n  const theme = useTheme()\n  return (\n    <Layout site={site}>\n      <Hero />\n      <Container\n        css={css`\n          padding-bottom: 0;\n        `}\n      >\n        {allMdx.edges.map(({ node: post }) => (\n          <div\n            key={post.id}\n            css={css`\n              margin-bottom: 40px;\n            `}\n          >\n            <h2\n              css={css({\n                marginBottom: rhythm(0.3),\n                transition: 'all 150ms ease',\n                ':hover': {\n                  color: theme.colors.primary,\n                },\n              })}\n            >\n              <Link\n                to={post.frontmatter.slug}\n                aria-label={`View ${post.frontmatter.title}`}\n              >\n                {post.frontmatter.title}\n              </Link>\n            </h2>\n            <Description>\n              {post.excerpt}{' '}\n              <Link\n                to={post.frontmatter.slug}\n                aria-label={`View ${post.frontmatter.title}`}\n              >\n                Read Article â†’\n              </Link>\n            </Description>\n          </div>\n        ))}\n        <Link to=\"/blog\" aria-label=\"Visit blog page\">\n          View all articles\n        </Link>\n        <hr />\n      </Container>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      ...site\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { ne: false } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 190)\n          id\n          fields {\n            title\n            slug\n            date\n          }\n          parent {\n            ... on File {\n              sourceInstanceName\n            }\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            banner {\n              childImageSharp {\n                sizes(maxWidth: 720) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n            slug\n            keywords\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}